spring: 
  profiles: 
    active: local #local,dev,real

  config:
    import: data-config.yml

  mvc:
    view: #view 경로 및 확장자 지정
      prefix: /WEB-INF/views/
      suffix: .jsp

  datasource: #DB 접속
    driver-class-name: oracle.jdbc.OracleDriver
    url: ${dataconfig.db-url}
    username: ${dataconfig.db-username}
    password: ${dataconfig.db-password}
    hikari: #커넥션풀 
      connectionTimeout : 30000 #클라이언트가 pool에 connection을 요청하는데 기다리는 최대시간을 설정 30초
      maximumPoolSize : 10 #최대 커넥션 개수 설정
      maxLifetime : 1800000  #커넥션 풀에서 살아있을 수 있는 커넥션의 최대 수명시간 1,800초(30분)
      
  messages: #메시지
    basename: messages.ms,messages.hj,messages.hy,messages.hr1,messages.hr2,messages.sw
    encoding: UTF-8
    
  devtools: #View reload    livereload:      enabled: true
    
    restart: #컨트롤러, 모델단이 바뀌었을 때 프로젝트 재시작 설정 (정확히는 classpath에 있는 모든 파일)      enabled: true 

  servlet:
    multipart:
      max-file-size: 50MB #파일 한 개당 최대 사이즈
      max-request-size: 50MB #요청당 최대 파일 크기(주의) maxRequestSize도 설정이 필요
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: A5XRucEa44R51jO0VmRT
            client-secret: ${dataconfig.naver-client-secret}
            scope:
            - name
            - email
            - nickname
            client-name: Naver
            authorization-grant-type: authorization_code #OAuth2.0 인증 프로토콜에서 사용되는 인증 부여 유형
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
          kakao:
            client-id: 7dffe5615fcce456b3a893b1eeb8d159
            client-secret: ${dataconfig.kakao-client-secret}
            scope:
            - profile_nickname
            - account_email
            client-name: Kakao
            authorization-grant-type: authorization_code #OAuth2.0 인증 프로토콜에서 사용되는 인증 부여 유형
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao  
            client-authentication-method: POST
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize #네이버 로그인 연동 URL 생성
            token-uri: https://nid.naver.com/oauth2.0/token #접근 토큰 발급 요청
            user-info-uri: https://openapi.naver.com/v1/nid/me #접근 토큰을 이용하여 프로필 API 호출
            user-name-attribute: response #회원정보를 JSON으로 받는데, response라는 키 값으로 네이버가 리턴
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize #카카오 로그인 연동 URL 생성
            token-uri: https://kauth.kakao.com/oauth/token #접근 토큰 발급 요청
            user-info-uri: https://kapi.kakao.com/v2/user/me #접근 토큰을 이용하여 프로필 API 호출
            user-name-attribute: id   
mybatis: #mybatis 설정
  type-aliases-package: kr.spring.**.vo 
  mapper-locations: kr/spring/**/dao/*.xml
  
logging: #로그 지정  level:
    '[kr.spring]': debug 
    
server:
  port: 8080
  servlet:
    #context-path: /mybatis
    encoding:
      charset: UTF-8
      enabled: true #http 인코딩 지원을 활성화할지 여부
      force: true 
  tomcat:
    max-http-form-post-size: 50MB #톰캣에서 허용하는 파일 업로드 사이즈(multipart 용량 지정을 해도 톰캣 영역에서 용량 제한이 되기 때문에 설정 필요)
    max-swallow-size: 50MB #명시하지 않으면 ERR_CONNECTION_RESET 오류 발생

  
    
    
 

  
  
  